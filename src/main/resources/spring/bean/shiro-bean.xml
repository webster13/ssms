<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        ">
    <!--
    ********************************************************************************
    *      step-07 Shiro 权限验证
    ********************************************************************************
    -->
    <!-- SHIRO CONFIG START -->
    <!-- 缓存管理器 使用Ehcache实现 -->
    <!-- 定义授权缓存管理器 -->
    <bean id="shiroCacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
        <property name="cacheManager" ref="cacheManagerFactory"/>
    </bean>

    <!-- 凭证匹配器 -->
    <bean id="credentialsMatcher"
          class="com.learn.step07shiro.RetryLimitHashedCredentialsMatcher">
        <constructor-arg ref="shiroCacheManager" />
        <property name="hashAlgorithmName" value="md5" />
        <property name="hashIterations" value="3" />
        <property name="storedCredentialsHexEncoded" value="true" />
    </bean>

    <!--自定义一个Realm，指定Shiro验证用户登录的类为自定义的ShiroDbRealm.java-->
    <bean id="myRealm" class="com.learn.step07shiro.MyRealm">
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
    </bean>
    <!-- 会话Cookie模板 -->
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="sid"/>
        <property name="httpOnly" value="true"/>
        <!--表示浏览器关闭时失效此Cookie-->
        <property name="maxAge" value="-1"/>
    </bean>
    <!-- remenberMe配置 -->
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
        <constructor-arg value="rememberMe" />
        <property name="httpOnly" value="true" />
        <!-- 默认记住7天（单位：秒） -->
        <property name="maxAge" value="604800" />
    </bean>
    <!-- rememberMe管理器 -->
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">
        <property name="cipherKey" value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />
        <property name="cookie" ref="rememberMeCookie" />
    </bean>

    <!--根据Realm，创建实例securityManager-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="rememberMeManager" ref="rememberMeManager" />
        <property name="realms">
            <list>
                <ref bean="myRealm" />
            </list>
        </property>
    </bean>

    <!-- 08基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter"
          class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="username" />
        <property name="passwordParam" value="password" />
        <property name="rememberMeParam" value="rememberMe"/>
        <property name="loginUrl" value="/learn/login" />
        <property name="successUrl" value="/learn/shiro/user/user-center"/>
    </bean>




    <!--web过滤器shiroFilter，id必须与web.xml中过滤器名字一样-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">


        <!-- Shiro的核心安全接口,这个属性是必须的 -->
        <property name="securityManager" ref="securityManager"/>
        <!-- 要求登录时的链接 -->
        <property name="loginUrl" value="${learnPath}/login"/>
        <!-- 登录成功后要跳转的连接 -->
        <property name="successUrl" value="/learn/shiro/user_info"/>
        <!-- 用户访问未对其授权的资源时,所显示的连接 -->
        <property name="unauthorizedUrl" value="/learn/shiro/"/>
        <!-- 表单登录过滤-->
        <property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>
        <property name="filterChainDefinitions">
            <!-- 过滤url请求，详见http://blog.csdn.net/jadyer/article/details/12172839-->
            <value>
                <!--/learn/** = anon-->
                /learn/login = anon
                /learn/error/** = anon
                /learn/mvc/** = user
                /learn/ehcache/** = authc
                <!--/admin/** = authc, roles[administrator]-->
                <!--/rest/** = authc, rest-->
                <!--/remoting/rpc/** = authc, perms["remote:invoke"]-->
                <!--/admin/** = authc, roles[admin]-->
                <!--/docs/** = authc, perms[document:read]-->
                <!--/** = authc-->
            </value>
        </property>
    </bean>
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!--使用注解必须添加， AOP式方法级权限检查  -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>



</beans>